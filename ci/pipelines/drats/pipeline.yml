---
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: cryogenics/pr-queue-resource

- name: vault
  type: docker-image
  source:
    repository: wfernandes/vault-resource
    tag: latest

- name: pcf-pool
  type: docker-image
  source:
    repository: cftoolsmiths/toolsmiths-envs-resource

resources:
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: v12.*

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment.git
    branch: main

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github.access_token))

- name: disaster-recovery-acceptance-tests
  type: pull-request
  source:
    repository: cloudfoundry/disaster-recovery-acceptance-tests
    access_token: ((github.access_token))
    disable_forks: false
    base_branch: main
    watch_checks_interval: "30"
    autosync_pr: true

- name: cf-deployment-env
  icon: pool
  type: pcf-pool
  source:
    api_token: ((toolsmiths.api_token))
    hostname: environments.toolsmiths.cf-app.com
    pool_name: cf-deployment

- name: cryogenics-concourse-tasks
  type: git
  source:
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    private_key: ((github.ssh_key))
    branch: main

jobs:
- name: claim-cf-deployment
  plan:
  - in_parallel:
    - get: disaster-recovery-acceptance-tests
      trigger: true
      version: every
    - put: cf-deployment-env
      params:
        action: claim
    - get: cryogenics-concourse-tasks

- name: deploy-backup-restore-components
  plan:
  - in_parallel:
    - get: disaster-recovery-acceptance-tests
      version: every
      passed: [claim-cf-deployment]
      trigger: true
    - get: cf-deployment-env
      passed: [claim-cf-deployment]
      trigger: true
      version: every
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
  - put: disaster-recovery-acceptance-tests
    params:
      path: disaster-recovery-acceptance-tests
      status: pending
      context: drats
  - task: deploy-backup-restore-components
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      toolsmiths-env: cf-deployment-env
      ops-files: cf-deployment
    params:
      OPS_FILES: >
        operations/scale-to-one-az.yml
        operations/use-compiled-releases.yml
        operations/backup-and-restore/enable-backup-restore.yml
        operations/enable-nfs-volume-service.yml
        operations/experimental/disable-interpolate-service-bindings.yml
        operations/experimental/enable-traffic-to-internal-networks.yml
        operations/experimental/enable-smb-volume-service.yml
        operations/backup-and-restore/skip-backup-restore-droplets-and-packages.yml
  - task: bosh-run-errand-nfsbrokerpush
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: cf-deployment-env
    params:
      ERRAND_NAME: nfsbrokerpush
  - task: bosh-run-errand-smbbrokerpush
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: cf-deployment-env
    params:
      ERRAND_NAME: smbbrokerpush

- name: run-drats-tests
  plan:
  - in_parallel:
    - get: cf-deployment
      passed: [deploy-backup-restore-components]
    - get: disaster-recovery-acceptance-tests
      trigger: true
      passed: [deploy-backup-restore-components]
      version: every
    - get: cf-deployment-env
      passed: [deploy-backup-restore-components]
      trigger: true
      version: every
    - get: bbr-binary-release
    - get: cryogenics-concourse-tasks
  - load_var: pooled-env
    file: cf-deployment-env/metadata
    format: json
  - task: unit-tests
    file: disaster-recovery-acceptance-tests/ci/tasks/unit-tests/task.yml
    params:
      GITHUB_SSH_KEY: ((github.ssh_key))
    on_failure:
      put: disaster-recovery-acceptance-tests
      params:
        path: disaster-recovery-acceptance-tests
        status: failure
        context: drats
  - task: update-integration-config
    file: disaster-recovery-acceptance-tests/ci/tasks/update-integration-config/task.yml
    input_mapping:
      integration-configs: disaster-recovery-acceptance-tests
    params:
      SYSTEM_DOMAIN: ((.:pooled-env.name)).cf-app.com
      JUMPBOX_PRIVATE_KEY: ((.:pooled-env.bosh.jumpbox_private_key))
      CREDHUB_CLIENT: ((.:pooled-env.bosh.credhub_client))
      CREDHUB_SECRET: ((.:pooled-env.bosh.credhub_secret))
      CREDHUB_CA_CERT: ((.:pooled-env.bosh.credhub_ca_cert))
      CREDHUB_SERVER: ((.:pooled-env.bosh.credhub_server))
      CREDHUB_PROXY: ((.:pooled-env.bosh.bosh_all_proxy))
      BOSH_ENVIRONMENT: ((.:pooled-env.bosh.bosh_environment))
      BOSH_CA_CERT: ((.:pooled-env.bosh.bosh_ca_cert))
      BOSH_ALL_PROXY: ((.:pooled-env.bosh.bosh_all_proxy))
      BOSH_CLIENT: ((.:pooled-env.bosh.bosh_client))
      BOSH_CLIENT_SECRET: ((.:pooled-env.bosh.bosh_client_secret))
  - task: acceptance-tests
    file: disaster-recovery-acceptance-tests/ci/tasks/drats-with-integration-config/task.yml
    privileged: true
    input_mapping:
      drats-integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: ci/integration_config.json
      CF_DIAL_TIMEOUT: 300
    on_failure:
      put: disaster-recovery-acceptance-tests
      params:
        path: disaster-recovery-acceptance-tests
        status: failure
        context: drats
    on_success:
      do:
      - put: disaster-recovery-acceptance-tests
        params:
          path: disaster-recovery-acceptance-tests
          status: success
          context: drats
      - put: disaster-recovery-acceptance-tests
        params:
          path: disaster-recovery-acceptance-tests
          merge: true
  - put: cf-deployment-env
    params:
      action: unclaim
      env_file: cf-deployment-env/metadata
