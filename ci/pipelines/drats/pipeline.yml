---
#!  WARNING: this pipeline is automatically set and manual changes will go away.
#!
#!  To setetetpipeline manually run:
#!    fly set-pipeline -p drats -c ci/pipelines/drats/pipeline.yml

number_of_retries: &number_of_retries 2
number_of_claim_env_retries: &number_of_claim_env_retries 5

#! ************************************
#! Secrets we need to run this pipeline
#! ************************************

github_token: &github_token ((github.access_token))
#! github_token was needed on 2023-09-04 to access PRs. Generated by using github account in lastpass at Shared-Cryogenics/infrastructure-root/github-ci-account
github_ssh_key: &github_ssh_key ((github.ssh_key))
#! github_ssh_key was needed on 2023-09-04 to merge PRs. Generated by using github account in lastpass at Shared-Cryogenics/infrastructure-root/github-ci-account
harbor_robot_username: &harbor_robot_username ((harbor/robot-account.username))
harbor_robot_password: &harbor_robot_password ((harbor/robot-account.password))
#! harbor_robot_{username,password} were needed on 2023-09-04 for accessing the cryogenics-essentials OCI image for running some of our tasks. The token can be generated by any team member who is logged in to https://harbor-repo.vmware.com/ using their own creds.
shepherd_account_key: &shepherd_account_key ((shepherd.sa_key))
  #! shepherd_account_key was needed on 2023-09-28 to claim shepherd environments. It was created using `shepherd create service-account` after logging in with WS1.


#! **************
#! End of secrets
#! **************

groups:
- name: test
  jobs:
    - claim-cf-deployment
    - deploy-backup-restore-components
    - run-drats-tests
    - release-cf-deployment-env

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: harbor-repo.vmware.com/dockerhub-proxy-cache/cryogenics/pr-queue-resource

- name: shepherd
  source:
    tag: v1
    repository: us-west2-docker.pkg.dev/shepherd-268822/shepherd2/concourse-resource
  type: registry-image

resources:
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment.git
    branch: main

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-backup-and-restore
    access_token: *github_token

- name: pr
  type: pull-request
  source:
    repository: cloudfoundry/disaster-recovery-acceptance-tests
    access_token: *github_token
    disable_forks: true
    base_branch: main
    watch_checks_interval: "30"
    autosync_pr: true

- name: cf-deployment-env
  icon: pool
  type: shepherd
  source:
    url: https://v2.shepherd.run
    service-account-key: *shepherd_account_key
    compatibility-mode: environments-app
    lease:
      namespace: cryogenics
      pool:
        namespace: official
        name: cfd

- name: cryogenics-concourse-tasks
  type: git
  source:
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    private_key: *github_ssh_key
    branch: main

- name: image-cryogenics-essentials
  type: registry-image
  source:
    repository: harbor-repo.vmware.com/cryogenics/essentials
    username: *harbor_robot_username
    password: *harbor_robot_password

jobs:
- name: claim-cf-deployment
  plan:
  - in_parallel:
    - get: pr
      trigger: true
      version: every
    - put: cf-deployment-env
      timeout: 6h
      attempts: *number_of_claim_env_retries
      params:
        action: create
        duration: 24h
        resource: cf-deployment-env
        timeout: 6h
    - get: cryogenics-concourse-tasks

- name: deploy-backup-restore-components
  plan:
  - in_parallel:
    - get: pr
      version: every
      passed: [claim-cf-deployment]
      trigger: true
    - get: cf-deployment-env
      passed: [claim-cf-deployment]
      trigger: true
      version: every
    - get: cf-deployment
    - get: cf-deployment-concourse-tasks
  - put: pr
    params:
      path: pr
      status: pending
      context: drats
  - task: deploy-backup-restore-components
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      toolsmiths-env: cf-deployment-env
      ops-files: cf-deployment
    params:
      OPS_FILES: >
        operations/scale-to-one-az.yml
        operations/use-compiled-releases.yml
        operations/backup-and-restore/enable-backup-restore.yml
        operations/enable-nfs-volume-service.yml
        operations/experimental/disable-interpolate-service-bindings.yml
        operations/experimental/enable-traffic-to-internal-networks.yml
        operations/enable-smb-volume-service.yml
        operations/backup-and-restore/skip-backup-restore-droplets-and-packages.yml
  - task: bosh-run-errand-nfsbrokerpush
    attempts: *number_of_retries
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: cf-deployment-env
    params:
      ERRAND_NAME: nfsbrokerpush
  - task: bosh-run-errand-smbbrokerpush
    attempts: *number_of_retries
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      toolsmiths-env: cf-deployment-env
    params:
      ERRAND_NAME: smbbrokerpush

- name: run-drats-tests
  plan:
  - in_parallel:
    - get: cf-deployment
      passed: [deploy-backup-restore-components]
    - get: pr
      trigger: true
      passed: [deploy-backup-restore-components]
      version: every
    - get: cf-deployment-env
      passed: [deploy-backup-restore-components]
      trigger: true
      version: every
    - get: bbr-binary-release
    - get: cryogenics-concourse-tasks
      passed:
        - claim-cf-deployment
    - get: image-cryogenics-essentials
  - load_var: pooled-env
    file: cf-deployment-env/metadata
    format: json
  - task: unit-tests
    image: image-cryogenics-essentials
    file: pr/ci/tasks/unit-tests/task.yml
    input_mapping:
      disaster-recovery-acceptance-tests: pr
    params:
      GITHUB_SSH_KEY: *github_ssh_key
    on_failure:
      put: pr
      params:
        path: pr
        status: failure
        context: drats
  - task: update-integration-config
    image: image-cryogenics-essentials
    file: pr/ci/tasks/update-integration-config/task.yml
    input_mapping:
      integration-configs: pr
      disaster-recovery-acceptance-tests: pr
    params:
      SYSTEM_DOMAIN: ((.:pooled-env.name)).cf-app.com
      JUMPBOX_PRIVATE_KEY: ((.:pooled-env.bosh.jumpbox_private_key))
      CREDHUB_CLIENT: ((.:pooled-env.bosh.credhub_client))
      CREDHUB_SECRET: ((.:pooled-env.bosh.credhub_secret))
      CREDHUB_CA_CERT: ((.:pooled-env.bosh.credhub_ca_cert))
      CREDHUB_SERVER: ((.:pooled-env.bosh.credhub_server))
      CREDHUB_PROXY: ((.:pooled-env.bosh.bosh_all_proxy))
      BOSH_ENVIRONMENT: ((.:pooled-env.bosh.bosh_environment))
      BOSH_CA_CERT: ((.:pooled-env.bosh.bosh_ca_cert))
      BOSH_ALL_PROXY: ((.:pooled-env.bosh.bosh_all_proxy))
      BOSH_CLIENT: ((.:pooled-env.bosh.bosh_client))
      BOSH_CLIENT_SECRET: ((.:pooled-env.bosh.bosh_client_secret))
  - task: acceptance-tests
    attempts: *number_of_retries
    image: image-cryogenics-essentials
    file: pr/ci/tasks/drats-with-integration-config/task.yml
    privileged: true
    input_mapping:
      disaster-recovery-acceptance-tests: pr
      drats-integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: ci/integration_config.json
      CF_DIAL_TIMEOUT: 300
    on_failure:
      put: pr
      params:
        path: pr
        status: failure
        context: drats
    on_success:
      do:
      - put: pr
        params:
          path: pr
          status: success
          context: drats
      - put: pr
        params:
          path: pr
          merge: true

- name: release-cf-deployment-env
  plan:
  - get: cf-deployment-env
    trigger: true
    passed:
    - run-drats-tests
  - put: cf-deployment-env
    params:
      action: release
      resource: cf-deployment-env

