---
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
    tag: latest

resources:
- name: cf-deployment-concourse-tasks
  type: git
  source:
    branch: main
    uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
    tag_filter: v10.*

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment.git
    branch: main
    tag_filter: v13.*

- name: bosh-backup-and-restore-meta
  type: git
  source:
    uri: git@github.com:pivotal-cf/bosh-backup-and-restore-meta.git
    private_key: ((github.ssh_key))
    git_crypt_key: ((github-bbr.crypt_key))
    branch: master

- name: disaster-recovery-acceptance-tests-prs
  type: pull-request
  source:
    repo: cloudfoundry-incubator/disaster-recovery-acceptance-tests
    access_token: ((github.access_token))

- name: bbr-binary-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github.access_token))

jobs:

## DEPLOY CF

- name: deploy-cf-prs
  serial: true
  serial_groups: [drats-prs]
  plan:
  - in_parallel:
    - get: disaster-recovery-acceptance-tests-prs
      version: every
    - get: cf-deployment
    - get: bosh-backup-and-restore-meta
    - get: cf-deployment-concourse-tasks
  - task: deploy-cf
    file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
      ops-files: cf-deployment
      vars-store: bosh-backup-and-restore-meta
      vars-files: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/
      SYSTEM_DOMAIN: drats-pr-ragdoll.cryo.cf-app.com
      OPS_FILES: "operations/scale-to-one-az.yml operations/use-compiled-releases.yml operations/backup-and-restore/enable-backup-restore.yml operations/enable-nfs-volume-service.yml operations/experimental/disable-interpolate-service-bindings.yml operations/experimental/enable-traffic-to-internal-networks.yml operations/experimental/enable-smb-volume-service.yml operations/backup-and-restore/skip-backup-restore-droplets-and-packages.yml"
      GIT_COMMIT_EMAIL: cf-lazarus@pivotal.io
      GIT_COMMIT_USERNAME: "Cryogenics Concourse"
  - task: wait-for-cf-api
    file: disaster-recovery-acceptance-tests-prs/ci/tasks/wait-for-cf-api/task.yml
    params:
      CF_API_URL: https://api.drats-pr-ragdoll.cryo.cf-app.com
      CF_UAA_URL: https://uaa.drats-pr-ragdoll.cryo.cf-app.com
  - task: bosh-run-errand-nfsbrokerpush
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/
      ERRAND_NAME: nfsbrokerpush
  - task: bosh-run-errand-smbbrokerpush
    file: cf-deployment-concourse-tasks/run-errand/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/
      ERRAND_NAME: smbbrokerpush
  - task: bosh-cleanup
    file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/

### RUN TESTS

- name: run-drats-prs
  serial: true
  serial_groups: [drats-prs]
  plan:
  - in_parallel:
    - get: cf-deployment
      passed: [deploy-cf-prs]
    - get: disaster-recovery-acceptance-tests-prs
      trigger: true
      passed: [deploy-cf-prs]
      version: every
    - get: bbr-binary-release
    - get: bosh-backup-and-restore-meta
  - put: disaster-recovery-acceptance-tests-prs
    params:
      path: disaster-recovery-acceptance-tests-prs
      status: pending
      context: drats
  - task: unit-tests
    file: disaster-recovery-acceptance-tests-prs/ci/unit-tests/task.yml
    input_mapping:
      disaster-recovery-acceptance-tests: disaster-recovery-acceptance-tests-prs
    params:
      GITHUB_SSH_KEY: ((github.ssh_key))
    on_failure:
      put: disaster-recovery-acceptance-tests-prs
      params:
        path: disaster-recovery-acceptance-tests-prs
        status: failure
        context: drats
  - task: create-integration-config
    file: disaster-recovery-acceptance-tests-prs/ci/credhub-compatible/update-integration-config/task.yml
    input_mapping:
      disaster-recovery-acceptance-tests: disaster-recovery-acceptance-tests-prs
      integration-configs: bosh-backup-and-restore-meta
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/
      SYSTEM_DOMAIN: drats-pr-ragdoll.cryo.cf-app.com
      INTEGRATION_CONFIG_FILE_PATH: drats-pr-ragdoll/integration_config.json
  - task: acceptance-tests
    file: disaster-recovery-acceptance-tests-prs/ci/drats-with-integration-config/task.yml
    privileged: true
    input_mapping:
      disaster-recovery-acceptance-tests: disaster-recovery-acceptance-tests-prs
      drats-integration-config: updated-integration-configs
    params:
      CONFIG_FILE_PATH: drats-pr-ragdoll/integration_config.json
      CF_DIAL_TIMEOUT: 300
    on_failure:
      put: disaster-recovery-acceptance-tests-prs
      params:
        path: disaster-recovery-acceptance-tests-prs
        status: failure
        context: drats
    on_success:
      put: disaster-recovery-acceptance-tests-prs
      params:
        path: disaster-recovery-acceptance-tests-prs
        status: success
        context: drats

## Delete cf deployments
- name: delete-cf-prs
  serial: true
  serial_groups: [drats-prs]
  plan:
  - in_parallel:
    - get: cf-deployment
      passed: [run-drats-prs]
    - get: disaster-recovery-acceptance-tests-prs
      trigger: true
      passed: [run-drats-prs]
    - get: cf-deployment-concourse-tasks
    - get: bosh-backup-and-restore-meta
  - task: bosh-delete-deployment
    file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
    input_mapping:
      bbl-state: bosh-backup-and-restore-meta
    params:
      BBL_STATE_DIR: drats-pr-ragdoll/


